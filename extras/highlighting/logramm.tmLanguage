<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>fileTypes</key>
    <array>
        <string>lgm</string>
        <string>lgl</string>
    </array>
    <key>keyEquivalent</key>
    <string>^~L</string>
    <key>name</key>
    <string>Logramm</string>
    <key>repository</key>
    <dict>
        <key>string_escaped_char</key>
        <dict> 
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>\\(\\|[abefnprtv'"?]|[0-3]\d{,2}|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|&amp;\w+;)</string>
                    <key>name</key>
                    <string>constant.character.escape.c</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>\\.</string>
                    <key>name</key>
                    <string>invalid.illegal.unknown-escape.c</string>
                </dict>
            </array>
        </dict>
    </dict>
    <key>patterns</key>
    <array>
        <!-- STRINGS -->

        <dict>
            <key>begin</key>
            <string>"</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.begin.c</string>
                </dict>
            </dict>
            <key>end</key>
            <string>"</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.string.end.c</string>
                </dict>
            </dict>
            <key>name</key>
            <string>string.quoted.double.c</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#string_escaped_char</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#string_placeholder</string>
                </dict>
            </array>

            
        </dict>
        <!-- /STRINGS -->



        <!-- Func Decls -->
        <dict>
            <key>match</key>
            <string>([a-zA-Z]+\s*\([^)]*\))\s*(?==&gt;)</string>
            <key>name</key>
            <string>constant.language.c</string>
        </dict>

        <dict>
            <key>match</key>
            <string>([a-zA-Z]+\s*\([^)]*\))\s*(?=#)</string>
            <key>name</key>
            <string>constant.language.c</string>
        </dict>


        <!-- Rule Decls -->
        <dict>
            <key>match</key>
            <string>([a-zA-Z]+\s*\([^)]*\))\s*(?=&lt;=&gt;)</string>
            <key>name</key>
            <string>constant.language.c</string>
        </dict>

        <!-- Module Decls -->
        <dict>
            <key>match</key>
            <string>([a-zA-Z\s]+)\s*(?=~)</string>
            <key>name</key>
            <string>constant.language.c</string>
        </dict>
        <dict>
            <key>match</key>
            <string>([a-zA-Z\s]+)\s*(?=::)</string>
            <key>name</key>
            <string>constant.language.cs</string>
        </dict>

        <dict>
            <key>match</key>
            <string>(=&gt;|#(?!!)|&lt;=&gt;|\-&gt;|external|::|:|\~|!(?!=))</string>
            <key>name</key>
            <string>entity.name.function.preprocessor.c</string>
        </dict>
        <!-- commands -->
        <dict>
            <key>match</key>
            <string>\b(loop|import|\&gt;\&gt;|in|exec|out|break|return|panic|else)\b|@|\$&gt;|&lt;\-|&lt;&lt;|&gt;&gt;|%%|==&gt;|!!</string>
            <key>name</key>
            <string>variable.parameter.preprocessor.c</string>
        </dict>
        <!-- constants -->
        <dict>
            <key>match</key>
            <string>\b(true|yes|false|no|and|or|this)\b</string>
            <key>name</key>
            <string>storage.type.c</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(0x[0-9A-Fa-f]+)\b|\b(0b[01]+)\b|\b([0-9]+\.[0-9]+)\b|\b([0-9]+)\b</string>
            <key>name</key>
            <string>string.quoted.double.c</string>
        </dict>

        <dict>
            <key>match</key>
            <string>(\+|\-|==|!=|&gt;|&lt;|&gt;=|&lt;=|\&amp;|\&amp;\&amp;|\||\|\||\*|\\|%)(?!=)</string>
            <key>name</key>
            <string>keyword.control.c</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(comment)\b</string>
            <key>name</key>
            <string>comment.block.c</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\b(illegal)\b</string>
            <key>name</key>
            <string>invalid.illegal.placeholder.c</string>
        </dict>
        <dict>
            <key>match</key>
            <string></string>
            <key>name</key>
            <string>invalid.deprecated.operator.python</string>
        </dict>
        <dict>
            <key>match</key>
            <string></string>
            <key>name</key>
            <string>support.function.magic.python</string>
        </dict>

        

        <!-- COMMENTS -->
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.toc-list.banner.block.c</string>
                </dict>
            </dict>
            <key>match</key>
            <string>^/\* =(\s*.*?)\s*= \*/$\n?</string>
            <key>name</key>
            <string>comment.block.c</string>
        </dict>
        <dict>
            <key>begin</key>
            <string>/\*</string>
            <key>captures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.c</string>
                </dict>
            </dict>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.c</string>
        </dict>
        <dict>
            <key>match</key>
            <string>\*/.*\n</string>
            <key>name</key>
            <string>invalid.illegal.stray-comment-end.c</string>
        </dict>
        <dict>
            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>meta.toc-list.banner.line.c</string>
                </dict>
            </dict>
            <key>match</key>
            <string>^// =(\s*.*?)\s*=\s*$\n?</string>
            <key>name</key>
            <string>comment.line.banner.c++</string>
        </dict>
        <dict>
            <key>begin</key>
            <string>//</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.c</string>
                </dict>
            </dict>
            <key>end</key>
            <string>$\n?</string>
            <key>name</key>
            <string>comment.line.double-slash.c++</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>(?&gt;\\\s*\n)</string>
                    <key>name</key>
                    <string>punctuation.separator.continuation.c++</string>
                </dict>
            </array>
        </dict>
        <dict>
            <key>begin</key>
            <string>#!</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.c</string>
                </dict>
            </dict>
            <key>end</key>
            <string>$\n?</string>
            <key>name</key>
            <string>comment.line.double-slash.c++</string>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>(?&gt;\\\s*\n)</string>
                    <key>name</key>
                    <string>punctuation.separator.continuation.c++</string>
                </dict>
            </array>
        </dict>
        <!-- /COMMENTS -->
    </array>
    <key>scopeName</key>
    <string>source.logramm</string>
    <key>uuid</key>
    <string>ba85303d-053b-4565-b1f7-01d750353058</string>
</dict>
</plist>
